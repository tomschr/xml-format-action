# https://docs.github.com/en/free-pro-team@latest/actions/creating-actions/metadata-syntax-for-github-actions
name: 'XML reformat'
description: 'Reformat XML files'
author: "@tomschr"

inputs:
  config:
    description: "The config file to use for xmlformat"
    required: false
    default: ""

  exclude-files:
    description: "Exclude files from reformatting"
    required: false
    default: ""

  extensions:
    description: "Define file extensions for XML files (without dots or globs)"
    required: false
    default: "xml"

  commit:
    description: "Should the formatted files committed? Use true, yes, or 1."
    required: false
    default: true

  commit-message:
    description: "Use this commit message for the reformatting step"
    required: false
    default: "[xml-format-action] Auto reformatting XML Files"

  repo-token:
    description: "The GitHub token"
    required: true
    # default: ${{ secrets.GITHUB_TOKEN }}

outputs:
  xmlfound:
    description: "Does the commit contains some XML files?"
    value: ${{ steps.reformat.outputs.xmlfound }}

runs:
  using: "composite"
  steps:
    - id: gh-context
      name: Saving the GitHub context as JSON
      shell: bash
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        FILE="/tmp/github-context.json"
        echo $GITHUB_CONTEXT > $FILE
        echo "::set-output name=contextfile::$FILE"

    - id: install-packages
      name: Installing packages
      shell: bash
      run: |
        PACKAGES="xmlformat-ruby"
        echo "::group::Installing package(s) $PACKAGES..."
        sudo apt-get install $PACKAGES
        echo "::endgroup::"

    - id: reformat
      shell: bash
      run: |
        CONFIG="${{ inputs.config }}"
        EXCLUDES="${{ inputs.exclude-files }}"
        MESSAGE="${{ inputs.commit-message }}"

        ${{ github.action_path }}/xml-format-action.sh -vv ${CONFIG:+--config-file "$CONFIG"} \
          ${EXCLUDES:+--excludes="$EXCLUDES"} \
          --extensions="${{ inputs.extensions }}" \
          --need-commit  ${{ inputs.commit }} \
          ${MESSAGE:+--message="$MESSAGE"} \
          --token=${{ inputs.repo-token }} \
          --context "${{ steps.gh-context.outputs.contextfile }}" \
          "${{ github.sha }}"


branding:
    icon: "git-merge"
    color: "green"
